{"version":3,"file":"index.js","sourceRoot":"","sources":["../index.ts"],"names":[],"mappings":"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","sourcesContent":["import {Person} from \"./person\";\nimport {config} from \"./assets/config\";\nimport {ValidateExtentions} from \"./classes/validateFunctions\";\nimport {time} from \"./classes/time\";\n\n// @ts-ignore\nimport * as fs from 'fs';\nclass Parser {\n    getData(filename) {\n        // @ts-ignore\n        return new Promise((resolve, reject) => {\n            let arr: Person [] = [];\n            // @ts-ignore\n            const csv = require('fast-csv');\n            csv.fromPath(`${filename}.csv`, {\n                headers: true,\n                strictColumnHandling: true,\n                delimiter: ',',\n                ignoreEmpty: true\n            })\n                .on('data', (data: Person) => arr.push(data))\n                .on('end', () => {\n                    resolve(arr);\n                })\n                .on('error', (error) => {\n                    reject(error);\n                });\n        });\n    }\n}\n\nlet validItems: Person[] = [];\nlet invalidItems: Person[] = [];\nlet parser = new Parser();\nparser.getData('../assets/Users')\n    .then((array: Person[]) => {\n\n        for(let i = 0; i < array.length; i++){\n\n            let res = validate(array[i]);\n            if (res.valid) {\n                validItems.push(res);\n            }\n            else {\n                invalidItems.push(res);\n\n            }\n        }\n\n        saveToDB(validItems);\n        let headers:Person = {Age:'Age',Name:'Name',Surname:'Surname', Time:'Time', DateOfReg:'regDate', Email:'mail', Phone:'Phone', valid:true, errors:null };\n        invalidItems.push(headers);\n        saveToCSV(invalidItems);\n    })\n    .catch((error) => {\n        console.log('все накрылось, потому что: ', error)\n    });\n\n\nfunction validate(data: Person): Person {\n    data.valid = true;\n    if (!data) {\n        data.valid = false;\n        return data;\n    }\n\n    const errors: any = {};\n    data.errors = [];\n\n    let field = 'name';\n    let conf = config.csv.find(obj => obj.name === field);\n    let Res = ValidateExtentions.validateLength(conf.minLength, conf.maxLength, data.Name, field);\n    data = EvaluateRes(Res, data);\n    Res = ValidateExtentions.validateRegexExpression(conf.regExp, data.Name, field);\n    data = EvaluateRes(Res, data);\n\n    field = 'surname';\n    conf = config.csv.find(obj => obj.name === field);\n    Res = ValidateExtentions.validateLength(conf.minLength, conf.maxLength, data.Surname, field);\n    data = EvaluateRes(Res, data);\n    Res = ValidateExtentions.validateRegexExpression(conf.regExp, data.Surname, field);\n    data = EvaluateRes(Res, data);\n\n    field = 'age';\n    conf = config.csv.find(obj => obj.name === field);\n    Res = ValidateExtentions.validateLength(conf.minLength, conf.maxLength, data.Age, field);\n    data = EvaluateRes(Res, data);\n    Res = ValidateExtentions.validateRegexExpression(conf.regExp, data.Age, field);\n    data = EvaluateRes(Res, data);\n\n    field = 'date';\n    conf = config.csv.find(obj => obj.name === field);\n    Res = ValidateExtentions.validateLengthOFDate(conf.minLength, conf.maxLength, data.DateOfReg, field);\n    data = EvaluateRes(Res, data);\n    // Res = ValidateExtentions.validateDateOfReg(data.DateOfReg, field);\n    // data = EvaluateRes(Res, data);\n    Res = ValidateExtentions.validateCurrentDate(data.DateOfReg, field);\n    data = EvaluateRes(Res, data);\n\n    field = 'email';\n    conf = config.csv.find(obj => obj.name === field);\n    Res = ValidateExtentions.validateEmail(data.Email, field);\n    data = EvaluateRes(Res, data);\n\n    field = 'phone';\n    conf = config.csv.find(obj => obj.name === field);\n    Res = ValidateExtentions.validateLength(conf.minLength, conf.maxLenght, data.Phone, field);\n    data = EvaluateRes(Res, data);\n    Res = ValidateExtentions.validateRegexExpression(conf.regExp, data.Phone, field);\n    data = EvaluateRes(Res, data);\n\n    field = 'time';\n    conf = config.csv.find(obj => obj.name === field);\n    let tm = new time(data.Time, conf);\n    if (!tm.valid) {\n        data.valid = false;\n        data.errors.push(tm.error);\n    }\n    else data.Time = tm.value;\n    if (data.valid) {\n        Res = ValidateExtentions.validateRange(+data.Age, conf.min, conf.max, field);\n        data = EvaluateRes(Res, data);\n    }\n\n    return data;\n}\n\nfunction EvaluateRes(Res: string, data: Person): Person {\n    if (Res!= null) {\n        data.valid = false;\n        data.errors.push(Res);\n    }\n    return data;\n}\n\nfunction saveToDB(validData: Array<Person>) {\n    if (!validData || !validData.length) {\n        return;\n    }\n    // @ts-ignore\n    const mysql      = require('mysql');\n    const connection = mysql.createConnection({\n        host     : 'localhost',\n        user     : 'root',\n        password : 'localhost',\n        database : 'csv'\n    });\n\n    connection.connect((err) => {\n        if (err) throw err;\n        console.log('CONNECTED TO DB:');\n\n        let cnt = 0;\n\n        validData.forEach((item, index) => {\n            const sql = `INSERT INTO persons (id, name, surname, age, email, dateofreg, time, phone) VALUES ('${cnt}', '${item.Name}\\',\\'${item.Surname}\\',${item.Age}, \\'${item.Email}\\', \\'${item.DateOfReg}\\', \\'${item.Time}\\', \\'${item.Phone}\\')`;\n            cnt++;\n            connection.query(sql, (err, result) => {\n                if (err) throw err;\n\n                if (index === validData.length - 1) {\n                    connection.end();\n                }\n            });\n        });\n        console.log(cnt + \" records inserted\");\n\n    });\n}\n\nfunction saveToCSV(data:Person[]) {\n    let writer = fs.createWriteStream('../assets/invalid.csv');\n    writer.write(Object.keys(data[0]).join(',') + '\\n');\n    data.forEach((item, index) => {\n        let arr = [];\n        for (let key in item) {\n            arr.push(item[key]);\n        }\n        writer.write(arr.join(',') + '\\n');\n    });\n    console.log('saved '+(data.length-1)+' items to csv');\n}"]}